<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.alpharogroup</groupId>
	<artifactId>wicket-js-addons</artifactId>
	<version>6.18.0</version>
	<inceptionYear>2015</inceptionYear>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>

	<description>javascript libraries and jquery plugins that are integrated with the framework wicket</description>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<url>https://github.com/lightblueseas/wicket-js-addons</url>

	<scm>
		<connection>scm:git:git:@github.com:lightblueseas/wicket-js-addons.git</connection>
		<developerConnection>scm:git:git@github.com:lightblueseas/wicket-js-addons.git</developerConnection>
		<url>git:@github.com:lightblueseas/wicket-js-addons.git</url>
	</scm>

	<developers>

		<developer>
			<id>astrapi69</id>
			<name>Asterios Raptis</name>
			<email>astrapi69 at users.sf.net</email>
			<timezone>Berlin</timezone>
			<roles>
				<role>Project manager</role>
				<role>Developer</role>
			</roles>
		</developer>

	</developers>

	<modules>
		<module>wicket-popupoverlay</module>
		<module>wicket-js-addons-core</module>
		<module>wicket-toastr</module>
		<module>wicket-tooltipster</module>
		<module>wicket-spin.js</module>
		<module>wicket-pnotify</module>
		<module>wicket-session-timeout</module>
		<module>wicket-collapsible</module>
	</modules>

	<properties>
		<!-- PROJECT encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- LOMBOK version -->
		<lombok.version>1.16.6</lombok.version>
		<wicket-js-addons-core.version>${project.version}</wicket-js-addons-core.version>
		<!-- WICKET version -->
		<!-- 
				Means for versions 6.0.0 <= x < 6.99 For more information see
				https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html
				and
				https://docs.oracle.com/middleware/1212/core/MAVEN/maven_version.htm#MAVEN402
				7.3 Version Range References
		  -->
		<wicket.version>[6.0.0,6.99)</wicket.version>
		<!-- WICKET EXTENSION LIBRARIES versions -->
		<wicketstuff.version>[6.0.0,6.99)</wicketstuff.version>
		<wiquery-core.version>6.13.0</wiquery-core.version>
		<wicket-modelfactory.version>0.9.8</wicket-modelfactory.version>
		<wicket-source.version>6.0.0.8</wicket-source.version>
		<!-- JETTY 9 version -->
		<jetty9.version>9.3.0.v20150612</jetty9.version>
		<wicket-jetty9-runner.version>1.0.2</wicket-jetty9-runner.version>
		<!-- TOMCAT version -->
		<tomcat.version>7.0.57</tomcat.version>
		<!-- LOGGING versions -->
		<slf4j.version>1.6.4</slf4j.version>
		<log4j.version>1.2.16</log4j.version>
		<!-- UNIT TEST versions -->
		<testng.version>6.9.4</testng.version>
		<junit.version>4.12</junit.version>
		<!-- JAULP versions -->
		<jaulp.core.version>4.0.0</jaulp.core.version>
		<jaulp.collections.version>${jaulp.core.version}</jaulp.collections.version>
		<jaulp.design.patterns.version>${jaulp.core.version}</jaulp.design.patterns.version>
		<jaulp.email.version>${jaulp.core.version}</jaulp.email.version>
		<jaulp.file.version>${jaulp.core.version}</jaulp.file.version>
		<jaulp.generic.tree.version>${jaulp.core.version}</jaulp.generic.tree.version>
		<jaulp.lang.version>${jaulp.core.version}</jaulp.lang.version>
		<jaulp.net.version>${jaulp.core.version}</jaulp.net.version>
		<jaulp.swing.version>${jaulp.core.version}</jaulp.swing.version>
		<jaulp.test.objects.version>${jaulp.core.version}</jaulp.test.objects.version>
		<jaulp.time.version>${jaulp.core.version}</jaulp.time.version>
		<jaulp.xml.version>${jaulp.core.version}</jaulp.xml.version>
		<!-- MYSTIC-CRYPT versions -->
		<mystic-crypt.version>4.0.0</mystic-crypt.version>
		<crypt-core.version>${mystic-crypt.version}</crypt-core.version>
		<randomizer.version>${mystic-crypt.version}</randomizer.version>
		<!-- EXTERNAL LIBRARIES versions -->
		<recaptcha4j.version>0.0.7</recaptcha4j.version>
		<joda-time.version>2.7</joda-time.version>
		<!-- APACHE COMMONS LIBRARIES versions -->
		<commons-beanutils.version>1.9.2</commons-beanutils.version>
		<commons-collections4.version>4.0</commons-collections4.version>
		<guava.version>18.0</guava.version>
		<commons-lang3.version>3.3.1</commons-lang3.version>
		<!-- MAVEN PLUGIN versions -->
		<!-- MAVEN COMPILER PLUGIN version -->
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-compiler-plugin.source.version>1.7</maven-compiler-plugin.source.version>
		<maven-compiler-plugin.target.version>1.7</maven-compiler-plugin.target.version>
		<maven-compiler-plugin.compilerVersion>1.7</maven-compiler-plugin.compilerVersion>
		<maven-compiler-plugin.encoding>${project.build.sourceEncoding}</maven-compiler-plugin.encoding>
		<maven-compiler-plugin.optimize>true</maven-compiler-plugin.optimize>
		<maven-compiler-plugin.showWarnings>true</maven-compiler-plugin.showWarnings>
		<maven-compiler-plugin.debug>true</maven-compiler-plugin.debug>
		<!-- MAVEN ECLIPSE PLUGIN version -->
		<maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
		<!-- allowed values: R7, 1.0, 1.5, 2.0 or none -->
		<wtp.version>2.0</wtp.version>
		<!-- MAVEN JAVADOC PLUGIN version -->
		<maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
		<!-- MAVEN SOURCE PLUGIN version -->
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<!-- MAVEN CLEAN PLUGIN version -->
		<maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
		<!-- MAVEN GPG PLUGIN version -->
		<maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
		<!-- MAVEN RELEASE PLUGIN version -->
		<maven-release-plugin.version>2.5.1</maven-release-plugin.version>
		<!-- MAVEN DEPLOY PLUGIN version -->
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<!-- NEXUS STAGING MAVEN PLUGIN version -->
		<nexus-staging-maven-plugin.version>1.6.5</nexus-staging-maven-plugin.version>
		<!-- MAVEN ASSEBLY PLUGIN versions -->
		<maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
		<!-- MAVEN SUREFIRE PLUGIN versions -->
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<!-- LICENSE MAVEN PLUGIN versions -->
		<license-maven-plugin.version>2.8</license-maven-plugin.version>
		<!-- MAVEN WAR PLUGIN versions -->
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<!-- MAVEN INSTALL PLUGIN versions -->
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<!-- TOMCAT7 MAVEN PLUGIN versions -->
		<tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
		<!-- COVERAGE MAVEN PLUGIN versions -->
		<cobertura-maven-plugin.version>2.6</cobertura-maven-plugin.version>
		<coveralls-maven-plugin.version>2.2.0</coveralls-maven-plugin.version>
	</properties>



	<dependencyManagement>

		<dependencies>
			<!-- LOMBOK DEPENDENCIES -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>wicket-js-addons-core</artifactId>
				<version>${wicket-js-addons-core.version}</version>
			</dependency>
			<!-- WICKET DEPENDENCIES -->
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-core</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-datetime</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-extensions</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-spring</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-velocity</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<!-- WICKETSTUFF DEPENDENCIES -->
			<dependency>
				<groupId>org.wicketstuff</groupId>
				<artifactId>wicketstuff-annotation</artifactId>
				<version>${wicketstuff.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.wicket</groupId>
						<artifactId>wicket</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- WIQUERY DEPENDENCIES -->
			<dependency>
				<groupId>org.odlabs.wiquery</groupId>
				<artifactId>wiquery-core</artifactId>
				<version>${wiquery-core.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.wicket</groupId>
						<artifactId>wicket</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- WICKET-MODELFACTORY DEPENDENCIES -->
			<dependency>
				<groupId>org.wicketeer</groupId>
				<artifactId>wicket-modelfactory</artifactId>
				<version>${wicket-modelfactory.version}</version>
			</dependency>
			<!-- WICKET-SOURCE DEPENDENCIES -->
			<dependency>
				<groupId>net.ftlines.wicket-source</groupId>
				<artifactId>wicket-source</artifactId>
				<version>${wicket-source.version}</version>
			</dependency>
			<!-- JAULP WICKET DEPENDENCIES -->
			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.annotated.header.contributors</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.base</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.components</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.behaviors</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.data.provider</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.dialogs</artifactId>
				<version>${wicket.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.wicket.dropdownchoices</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<!-- JAULP DEPENDENCIES -->
			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.collections</artifactId>
				<version>${jaulp.collections.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.lang</artifactId>
				<version>${jaulp.lang.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>randomizer</artifactId>
				<version>${randomizer.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.xml</artifactId>
				<version>${jaulp.xml.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.test.objects</artifactId>
				<version>${jaulp.test.objects.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.file</artifactId>
				<version>${jaulp.file.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.time</artifactId>
				<version>${jaulp.time.version}</version>
			</dependency>
			<!-- EXTERNAL LIBRARIES DEPENDENCIES -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>


			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<!-- CAPTCHA DEPENDENCIES -->
			<dependency>
				<groupId>net.tanesha.recaptcha4j</groupId>
				<artifactId>recaptcha4j</artifactId>
				<version>${recaptcha4j.version}</version>
			</dependency>
			<!-- JETTY 9 DEPENDENCIES -->
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-server</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-webapp</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-jmx</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-deploy</artifactId>
				<version>${jetty9.version}</version>
			</dependency>
			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>wicket-jetty9-runner</artifactId>
				<version>${wicket-jetty9-runner.version}</version>
			</dependency>
			<!-- LOGGING DEPENDENCIES -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- LOGGING DEPENDENCIES - LOG4J -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- UNIT DEPENDENCY FOR TESTING -->
			<!-- TESTNG DEPENDENCY FOR TESTING -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
			</dependency>
			<!-- JUNIT DEPENDENCY FOR TESTING -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>
		<!-- LOMBOK DEPENDENCIES -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<!-- WICKET DEPENDENCIES -->
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-core</artifactId>
		</dependency>
		<!-- JETTY 9 DEPENDENCIES TEST -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-jmx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-deploy</artifactId>
		</dependency>
		<dependency>
			<groupId>de.alpharogroup</groupId>
			<artifactId>wicket-jetty9-runner</artifactId>
		</dependency>
		<!-- LOGGING DEPENDENCIES -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- LOGGING DEPENDENCIES - LOG4J -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<!-- UNIT DEPENDENCY FOR TESTING -->
		<!-- TESTNG DEPENDENCY FOR TESTING -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- JUNIT DEPENDENCY FOR TESTING -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.alpharogroup</groupId>
			<artifactId>jaulp.file</artifactId>
		</dependency>

	</dependencies>

	<build>

		<resources>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>

		</resources>

		<testResources>

			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>

		</testResources>

		<pluginManagement>

			<plugins>

				<plugin>
					<inherited>true</inherited>
					<!-- NOTE: We don't need a groupId specification because the group is 
						org.apache.maven.plugins ...which is assumed by default. -->
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven-compiler-plugin.source.version}</source>
						<target>${maven-compiler-plugin.target.version}</target>
						<compilerVersion>${maven-compiler-plugin.compilerVersion}</compilerVersion>
						<encoding>${maven-compiler-plugin.encoding}</encoding>
						<optimize>${maven-compiler-plugin.optimize}</optimize>
						<showWarnings>${maven-compiler-plugin.showWarnings}</showWarnings>
						<debug>${maven-compiler-plugin.debug}</debug>
					</configuration>
				</plugin>
				<!-- Configuring Maven Source Plugin: To attach source artifacts to your 
					build we execute the source:jar goal from the source plugin during the package 
					phase. -->
				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Configuring maven clean plugin: deletes the generated test-output 
					directories that are generated from testng. -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>test-output</directory>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<!-- Configuring Maven Javadoc Plugin: To attach javadoc artifacts to 
					your build we execute the javadoc:jar goal from the javadoc plugin. -->
				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<detectOfflineLinks>false</detectOfflineLinks>
						<minmemory>128m</minmemory>
						<maxmemory>256m</maxmemory>
						<notimestamp>true</notimestamp>
						<quiet>true</quiet>
						<links>
							<link>http://download.oracle.com/javase/1.5.0/docs/api</link>
							<link>http://download.oracle.com/javaee/5/api</link>
						</links>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadoc</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Signing with gpg -->
				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<mavenExecutorId>forked-path</mavenExecutorId>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- The Nexus Staging Maven Plugin is the recommended way to deploy 
					your components to OSSRH and release them to the Central Repository. _______________ 
					If your version is a release version (does not end in -SNAPSHOT) and with 
					this setup in place, you can run a deployment to OSSRH and an automated release 
					to the Central Repository with the usual: mvn clean deploy _________________________ 
					With the property autoReleaseAfterClose set to false you can manually inspect 
					the staging repository in Nexus and trigger a release of the staging repository 
					later with: mvn nexus-staging:release. -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<!-- this is used for inheritance merges -->
							<phase>package</phase>
							<!-- append to the packaging phase. -->
							<goals>
								<goal>attached</goal>
								<!-- goals == mojos -->
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<additionalBuildcommands>
							<buildcommand>org.eclipse.m2e.core.maven2Builder</buildcommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
							<projectnature>org.springsource.ide.eclipse.gradle.core.nature</projectnature>
						</additionalProjectnatures>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty9.version}</version>
					<configuration>
						<systemProperties>
							<systemProperty>
								<name>maven.project.build.directory.test-classes</name>
								<value>${project.build.directory}/test-classes</value>
							</systemProperty>
						</systemProperties>
						<jettyXml>${project.basedir}/src/test/jetty/jetty.xml,${project.basedir}/src/test/jetty/jetty-ssl.xml,${project.basedir}/src/test/jetty/jetty-http.xml,${project.basedir}/src/test/jetty/jetty-https.xml,${project.basedir}/src/test/jetty/jetty-deploy.xml</jettyXml>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>${tomcat7-maven-plugin.version}</version>
					<configuration>
						<path>/</path>
						<port>9090</port>
						<httpsPort>9443</httpsPort>
						<update>true</update>
						<url>http://localhost:9090/manager/text</url>
						<username>tomcat</username>
						<password>tomcat</password>
						<keystoreFile>${project.build.directory}/test-classes/keystore</keystoreFile>
						<keystorePass>wicket</keystorePass>
					</configuration>
					<!-- Configure whatever 7.0.* tomcat version we want. -->
					<dependencies>
						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-core</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-util</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-coyote</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jdbc</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-dbcp</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-servlet-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jsp-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jasper</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jasper-el</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-el-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-catalina</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-tribes</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-catalina-ha</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-annotations-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-juli</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-logging-juli</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-logging-log4j</artifactId>
							<version>${tomcat.version}</version>
						</dependency>

					</dependencies>

				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<header>src/main/resources/LICENSE.txt</header>
						<properties>
							<owner>Asterios Raptis</owner>
							<year>${project.inceptionYear}</year>
							<email>asterios.raptis@gmx.net</email>
						</properties>
						<excludes>
							<exclude>**/README</exclude>
							<exclude>**/*.xml</exclude>
							<exclude>**/*.xsl</exclude>
							<exclude>**/*.xsd</exclude>
							<exclude>**/*.dtd</exclude>
							<exclude>**/*.html</exclude>
							<exclude>**/*.properties</exclude>
							<exclude>**/*.bat</exclude>
							<exclude>**/*.gradle</exclude>
							<exclude>**/*.MF</exclude>
							<exclude>**/*.txt</exclude>
							<exclude>**/*.css</exclude>
							<exclude>**/*.js</exclude>
							<exclude>**/*.vm</exclude>
							<exclude>src/test/resources/**</exclude>
							<exclude>src/main/resources/**</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>format</goal>
							</goals>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura-maven-plugin.version}</version>
					<configuration>
						<format>xml</format>
						<maxmem>256m</maxmem>
						<!-- aggregated reports for multi-module projects -->
						<aggregate>true</aggregate>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<inherited>true</inherited>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

		</plugins>

	</build>



	<repositories>

		<repository>
			<id>Apache Nexus</id>
			<url>https://repository.apache.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>Sonatype Public</id>
			<name>Sonatype Public Repository</name>
			<url>http://repository.sonatype.org/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>Sonatype Release</id>
			<name>Sonatype Release Repository</name>
			<url>http://oss.sonatype.org/content/repositories/releases</url>
		</repository>

		<repository>
			<id>Sonatype Snapshots</id>
			<name>Sonatype Snapshots Repository</name>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>

	</repositories>

	<distributionManagement>

		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>

		<repository>
			<id>ossrh</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>

	</distributionManagement>

	<profiles>

		<profile>
			<id>oss.sonatype.org-staged-release</id>
			<!-- This is the profile to use for releasing into the staged release 
				repo. We need to sign the artifacts. -->
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<build>
				<plugins>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>

				</plugins>
			</build>

			<distributionManagement>
				<snapshotRepository>
					<id>ossrh</id>
					<name>Nexus snapshot Repository</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>ossrh</id>
					<name>Nexus snapshot Repository</name>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>

		</profile>

		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release-javadoc-jar-with-dependencies</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-assembly-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<!-- This profile is for generate or update the license header from source 
				files. for generate or update the license header you have to run this profile 
				with this goal license:format. -->
			<id>update-license-header</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>

					<plugin>
						<inherited>true</inherited>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
					</plugin>

				</plugins>
			</build>

		</profile>

		<profile>
			<id>generate-reports</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>download-repos</id>

			<repositories>

				<repository>
					<id>Sonatype Release</id>
					<name>Sonatype Release Repository</name>
					<url>http://oss.sonatype.org/content/repositories/releases</url>
				</repository>

			</repositories>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-eclipse-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>


</project>